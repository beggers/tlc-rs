// This file was generated by scripts/gen_parser_tests.py
// Do not edit this file directly.

mod read_and_parse;

#[test]
fn theorem_without_proof() {
    read_and_parse::test("testdata/proofs.tla", "Theorem Without Proof");
}

#[test]
fn named_theorem_without_proof() {
    read_and_parse::test("testdata/proofs.tla", "Named Theorem Without Proof");
}

#[test]
fn obvious_proof() {
    read_and_parse::test("testdata/proofs.tla", "Obvious Proof");
}

#[test]
fn named_obvious_proof() {
    read_and_parse::test("testdata/proofs.tla", "Named Obvious Proof");
}

#[test]
fn omitted_proof() {
    read_and_parse::test("testdata/proofs.tla", "Omitted Proof");
}

#[test]
fn proof_by_definition() {
    read_and_parse::test("testdata/proofs.tla", "Proof by Definition");
}

#[test]
fn proof_by_multiple_definitions() {
    read_and_parse::test("testdata/proofs.tla", "Proof by Multiple Definitions");
}

#[test]
fn proof_by_qed() {
    read_and_parse::test("testdata/proofs.tla", "Proof by QED");
}

#[test]
fn proof_with_variety_of_step_types() {
    read_and_parse::test("testdata/proofs.tla", "Proof with Variety of Step Types");
}

#[test]
fn stepped_proof_by_definition() {
    read_and_parse::test("testdata/proofs.tla", "Stepped Proof by Definition");
}

#[test]
fn proof_with_star_steps() {
    read_and_parse::test("testdata/proofs.tla", "Proof with Star Steps");
}

#[test]
fn proof_with_plus_step() {
    read_and_parse::test("testdata/proofs.tla", "Proof with Plus Step");
}

#[test]
fn nested_proof() {
    read_and_parse::test("testdata/proofs.tla", "Nested Proof");
}

#[test]
fn nested_proof_off_qed() {
    read_and_parse::test("testdata/proofs.tla", "Nested Proof Off QED");
}

#[test]
fn proof_with_nested_terminal_proof() {
    read_and_parse::test("testdata/proofs.tla", "Proof with Nested Terminal Proof");
}

#[test]
fn implicit_nested_proof_levels() {
    read_and_parse::test("testdata/proofs.tla", "Implicit Nested Proof Levels");
}

#[test]
fn proof_containing_jlist() {
    read_and_parse::test("testdata/proofs.tla", "Proof Containing Jlist");
}
